version: '3'

networks:
  backend:
    driver: bridge

services:
  neo4j:
    image: neo4j
    build: ..
    networks:
      - backend
    environment:
      NEO4J_HOST: 0.0.0.0
      NEO4J_AUTH: none
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,cyfhir.*
    ports:
      - '7474:7474'
      - '7473:7473'
      - '7687:7687'

  express-backend:
    image: express-backend
    build: ../express
    environment:
      NEO4J_URI: 'bolt://neo4j:7687'
      NEO4J_USER: 'neo4j'
      NEO4J_PASSWORD: 'password'
    depends_on:
      - neo4j
      - apm-server
    networks:
      - backend
    ports:
      - "3000:3000"

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.6.1
    depends_on:
      - elasticsearch
      - kibana
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    networks:
    - backend
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E apm-server.host="apm-server:8200"
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    environment:
    - bootstrap.memory_lock=true
    - cluster.name=docker-cluster
    - cluster.routing.allocation.disk.threshold_enabled=false
    - discovery.type=single-node
    - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
    - esdata:/usr/share/elasticsearch/data
    ports:
    - 9200:9200
    networks:
    - backend
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.1
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
    - 5601:5601
    networks:
    - backend
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

volumes:
  esdata:
    driver: local
